const e=await import("../../token-action-hud-core/scripts/token-action-hud-core.min.js"),t=e.ActionHandler,i=e.ActionListExtender,s=e.CategoryManager,a=e.PreRollHandler,o=e.RollHandler,l=e.SystemManager,n=e.Utils,c=e.Logger,r="token-action-hud-titan";function getSetting(e,t=null){let i=t??null;try{i=game.settings.get(r,e)}catch{c.debug(`Setting '${e}' not found`)}return i}async function setSetting(e,t){game.settings.settings.get(`${r}.${e}`)?(t=await game.settings.set(r,e,t),c.debug(`Setting '${e}' set to '${t}'`)):c.debug(`Setting '${e}' not found`)}function localize(e){return game.i18n.localize(`tokenActionHud.titan.${e}.label`)}function getOptions(){const e=!0===game.settings.get("titan","getCheckOptions");return game.keyboard.isModifierActive(KeyboardManager.MODIFIER_KEYS.SHIFT)?!e:e}class ActionHandler extends t{_addSubcategoryToCategory(e,t){this.actionList.categories.forEach((i=>{i.id===t&&(i.subcategories=[...i.subcategories,e])}))}async buildSystemActions(e,t){const i=e?.actor;if(i){const s=e?.actor?.id,a=e?.token?.id;return this._buildSingleCharacterActions(s,a,i,t)}return this._buildMultiCharacterActions()}_buildSingleCharacterActions(e,t,i){this._buildAttributesSubcategory(e,t),this._buildResistancesSubcategory(e,t),this._buildSkillsSubcategory(e,t),this._buildWeaponsCategory(e,t,i),this._buildEquipmentSubcategory(e,t,i),this._buildAbilitiesCategory(e,t,i),this._buildSpellsCategory(e,t,i),this._buildRecoverySubcategory(e,t),this._buildResourcesSubcategory(e,t,i)}_buildMultiCharacterActions(){const e="multi",t="multi";this._buildAttributesSubcategory(e,t),this._buildResistancesSubcategory(e,t),this._buildSkillsSubcategory(e,t),this._buildRecoverySubcategory(e,t),this._buildResourcesSubcategory(e,t)}_buildAttributesSubcategory(e,t){const i=["body","mind","soul"].map((i=>({id:i,name:localize(i),encodedValue:[e,t,"attributeCheck",i]})));console.log("Building attributes"),this.addActionsToActionList(i,{id:"attributes",type:"system"}),console.log(this)}_buildSkillsSubcategory(e,t){const i=["arcana","athletics","deception","dexterity","diplomacy","engineering","intimidation","investigation","lore","medicine","meleeWeapons","metaphysics","nature","perception","performance","rangedWeapons","subterfuge","stealth"].map((i=>({id:i,name:localize(i),encodedValue:[e,t,"skillCheck",i]})));return this.addActionsToActionList(i,"skills")}_buildResistancesSubcategory(e,t){const i=["reflexes","resilience","willpower"].map((i=>({id:i,name:localize(i),encodedValue:[e,t,"resistanceCheck",i]})));return this.addActionsToActionList(i,"resistances")}_buildWeaponsCategory(e,t,i){i.items.filter((e=>"weapon"===e.type&&(e.system.attack.length>0||e.system.check.length>0)&&(getSetting("showUnEquippedEquipment")||e.system.equipped))).sort(((e,t)=>e.sort<t.sort?-1:e.sort>t.sort?1:0)).forEach((i=>this._buildWeaponSubcategory(e,t,i)))}_buildWeaponSubcategory(e,t,i){const s=i._id,a=i.system.attack.map(((i,a)=>({id:`${s},attack,${a}`,name:i.label,encodedValue:[e,t,"attackCheck",s,a],icon:"melee"===i.type?'<i class="fas fa-sword"></i>':'<i class="fas fa-bow-arrow"></i>'}))),o=i.system.check.map(((i,a)=>({id:`${s},itemCheck,${a}`,name:i.label,encodedValue:[e,t,"itemCheck",s,a],icon:'<i class="fas fa-dice"></i>'}))),l={id:`${s},toggleMultiAttack`,name:localize(i.system.multiAttack?"multiAttackOn":"multiAttackOff"),encodedValue:[e,t,"toggleMultiAttack",s],icon:i.system.multiAttack?'<i class="fas fa-swords"></i>':'<i class="fas fa-sword"></i>'},n=this.initializeEmptySubcategory(s,"weapons",i.name,"system");return n.img=this.getImage(i),this._addSubcategoryToCategory(n,"weapons"),this.addActionsToActionList([...a,...o,l],s)}_buildEquipmentSubcategory(e,t,i){const s=i.items.filter((e=>{if(e.system.check.length>0)switch(e.type){case"weapon":case"ability":case"spell":return!1;case"armor":return getSetting("showUnEquippedEquipment")||i.system.equipped.armor===e._id;case"shield":return getSetting("showUnEquippedEquipment")||i.system.equipped.shield===e._id;default:return!(!getSetting("showUnEquippedEquipment")&&void 0!==e.system.equipped)||e.system.equipped}})).sort(((e,t)=>e.sort<t.sort?-1:e.sort>t.sort?1:0)),a=[];return s.forEach((i=>{const s=i._id;i.system.check.forEach(((o,l)=>{a.push({id:`${s},itemCheck`,name:`${i.name} (${o.label})`,encodedValue:[e,t,"itemCheck",s,l],img:this.getImage(i)})}))})),this.addActionsToActionList(a,"equipment")}_buildAbilitiesCategory(e,t,i){const s=i.items.filter((e=>"ability"===e.type&&e.system.check.length>0)).sort(((e,t)=>e.sort<t.sort?-1:e.sort>t.sort?1:0)),a=[];return s.forEach((i=>{const s=i._id;i.system.check.forEach(((o,l)=>{a.push({id:`${s},itemCheck`,name:`${i.name} (${o.label})`,encodedValue:[e,t,"itemCheck",s,l],img:this.getImage(i)})}))})),this.addActionsToActionList(a,"abilities")}_buildSpellsCategory(e,t,i){const s=i.items.filter((e=>"spell"===e.type)).sort(((e,t)=>e.sort<t.sort?-1:e.sort>t.sort?1:0)),a=[];s.forEach((e=>{-1===a.indexOf(e.system.tradition)&&a.push(e.system.tradition)})),a.forEach((i=>{this._buildTraditionSubcategory(e,t,i,s)}))}_buildTraditionSubcategory(e,t,i,s){const a=s.filter((e=>e.system.tradition===i)),o=[];a.forEach((i=>{const s=i._id;o.push({id:`${s},castingCheck`,name:`${i.name}`,encodedValue:[e,t,"castingCheck",s],img:this.getImage(i)}),i.system.check.forEach(((a,l)=>{o.push({id:`${s},itemCheck`,name:`${i.name} (${a.label})`,encodedValue:[e,t,"itemCheck",s,l],img:this.getImage(i)})}))}));const l=this.initializeEmptySubcategory(i,"spells",i,"system");return this._addSubcategoryToCategory(l,"spells"),this.addActionsToActionList(o,i)}_buildRecoverySubcategory(e,t){const i=[{id:"longRest",name:localize("longRest"),encodedValue:[e,t,"longRest"],icon:'<i class="fas fa-bed"></i>'},{id:"shortRest",name:localize("shortRest"),encodedValue:[e,t,"shortRest"],icon:'<i class="fas fa-face-exhaling"></i>'},{id:"removeTemporaryEffects",name:localize("removeTemporaryEffects"),encodedValue:[e,t,"removeTemporaryEffects"],icon:'<i class="fas fa-arrow-rotate-left"></i>'}];return this.addActionsToActionList(i,"recovery")}_buildResourcesSubcategory(e,t,i){const s=[{id:"spendResolve",name:localize("spendResolve"),encodedValue:[e,t,"spendResolve"],icon:'<i class="fas fa-bolt"></i>'}];return"player"===i?.type&&s.push({id:"toggleInspiration",name:localize("inspiration"),encodedValue:[e,t,"toggleInspiration"],icon:i.system.inspiration?'<i class="fas fa-sun"></i>':'<i class="far fa-circle"></i>'}),this.addActionsToActionList(s,"resources")}}class RollHandler extends o{async doHandleActionEvent(e,t){const i=t.split("|");4!==i.length&&super.throwInvalidValueErr();const s=i[0],a=i[1],o=i[2],l=i[3];if("multi"===o&&"toggleCombat"!==l)for(const t of canvas.tokens.controlled){const i=t.actor?.id,a=t.id;await this._handleMacros(e,s,i,a,l)}else await this._handleMacros(e,s,a,o,l)}async _handleMacros(e,t,i,s,a){switch(t){case"ability":this._rollAbility(e,i,s,a);break;case"abilityCheck":this._rollAbilityTest(e,i,s,a);break;case"abilitySave":this._rollAbilitySave(e,i,s,a);break;case"condition":if(!s)return;await this._toggleCondition(e,s,a);break;case"effect":await this._toggleEffect(e,i,s,a);break;case"feature":case"item":case"spell":case"weapon":this.isRenderItem()?this.doRenderItem(i,s,a):this._useItem(e,i,s,a);break;case"magicItem":this._rollMagicItem(e,i,s,a);break;case"skill":this._rollSkill(e,i,s,a);break;case"utility":await this._performUtilityMacro(e,i,s,a)}}_rollAbility(e,t,i,s){n.getActor(t,i).rollAbility(s,{event:e})}_rollAbilitySave(e,t,i,s){n.getActor(t,i).rollAbilitySave(s,{event:e})}_rollAbilityTest(e,t,i,s){n.getActor(t,i).rollAbilityTest(s,{event:e})}_rollMagicItem(e,t,i,s){const a=n.getActor(t,i),o=s.split(">"),l=o[0],c=o[1];MagicItems.actor(a.id).roll(l,c),Hooks.callAll("forceUpdateTokenActionHud")}_rollSkill(e,t,i,s){n.getActor(t,i).rollSkill(s,{event:e})}_useItem(e,t,i,s){const a=n.getActor(t,i),o=n.getItem(a,s);if(!this._needsRecharge(o))return o.use({event:e});o.rollRecharge()}_needsRecharge(e){return e.system.recharge&&!e.system.recharge.charged&&e.system.recharge.value}async _performUtilityMacro(e,t,i,s){const a=n.getActor(t,i),o=n.getToken(i);switch(s){case"deathSave":a.rollDeathSave({event:e});break;case"endTurn":if(!o)break;game.combat?.current?.tokenId===i&&await(game.combat?.nextTurn());break;case"initiative":await this._rollInitiative(t);break;case"inspiration":{const e=!a.system.attributes.inspiration;a.update({"data.attributes.inspiration":e});break}case"longRest":a.longRest();break;case"shortRest":a.shortRest();break;case"toggleCombat":if(0===canvas.tokens.controlled.length)break;await canvas.tokens.controlled[0].toggleCombat();break;case"toggleVisibility":if(!o)break;o.toggleVisibility()}Hooks.callAll("forceUpdateTokenActionHud")}async _rollInitiative(e,t){const i=n.getActor(e,t);await i.rollInitiative({createCombatants:!0}),Hooks.callAll("forceUpdateTokenActionHud")}async _toggleCondition(e,t,i,s=null){const a=n.getToken(t),o=this.isRightClick(e);if(game.dfreds&&s?.flags?.isConvenient){const e=s.label;game.dfreds.effectInterface._toggleEffect(e)}else{const e=this.findCondition(i);if(!e)return;o?await a.toggleEffect(e,{overlay:!0}):await a.toggleEffect(e)}Hooks.callAll("forceUpdateTokenActionHud")}findCondition(e){return CONFIG.statusEffects.find((t=>t.id===e))}async _toggleEffect(e,t,i,s){const a=n.getActor(t,i),o=("find"in a.effects.entries?a.effects.entries:a.effects).find((e=>e.id===s));if(!o)return;this.isRightClick(e)?await o.delete():await o.update({disabled:!o.disabled}),Hooks.callAll("forceUpdateTokenActionHud")}}function register(e){game.settings.register("token-action-hud-titan","showUnEquippedEquipment",{name:game.i18n.localize("tokenActionHud.titan.settings.showUnEquippedEquipment.label"),hint:game.i18n.localize("tokenActionHud.titan.settings.showUnEquippedEquipment.hint"),scope:"client",config:!0,type:Boolean,default:!1,onChange:t=>{e(t)}})}class SystemManager extends l{doGetCategoryManager(){return new s}doGetActionHandler(e){return new ActionHandler(e)}getAvailableRollHandlers(){const e={core:"Core Titan"};return l.addHandler(e),e}doGetRollHandler(e){return new RollHandler}doRegisterSettings(e){register(e)}async doRegisterDefaultFlags(){await n.setUserFlag("default",function getDefaults(){const e={categories:[{id:"attributes",title:localize("attributes"),subcategories:[{id:"attributes",title:localize("attributes"),type:"system"}]},{id:"resistances",title:localize("resistances"),subcategories:[{id:"resistances",title:localize("resistances"),type:"system"}]},{id:"skills",title:localize("skills"),subcategories:[{id:"skills",title:localize("skills"),type:"system"}]},{id:"weapons",title:localize("weapons"),subcategories:[]},{id:"equipment",title:localize("equipment"),subcategories:[{id:"equipment",title:localize("equipment"),type:"equipment"}]},{id:"abilities",title:localize("abilities"),subcategories:[{id:"abilities",title:localize("abilities"),type:"abilities"}]},{id:"spells",title:localize("spells"),subcategories:[]},{id:"utility",title:localize("utility"),subcategories:[{id:"recovery",title:localize("recovery"),type:"system"},{id:"resources",title:localize("resources"),type:"system"}]}],subcategories:[{id:"attributes",title:localize("attributes"),type:"system"},{id:"skills",title:localize("skills"),type:"system"},{id:"resistances",title:localize("resistances"),type:"system"},{id:"abilities",title:localize("abilities"),type:"system"},{id:"utility",title:localize("skills"),type:"system"}]},t=foundry.utils.deepClone(e);return e.default=t,e}())}}export{t as CoreActionHandler,i as CoreActionListExtender,s as CoreCategoryManager,a as CorePreRollHandler,o as CoreRollHandler,l as CoreSystemManager,n as CoreUtils,c as Logger,RollHandler,SystemManager,getOptions,getSetting,localize,register,setSetting};
